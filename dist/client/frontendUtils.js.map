{"version":3,"sources":["../../packages/frontendUtils.ts","../../src/utils/logic/permissions.ts","../../src/utils/logic/date.ts","../../src/utils/logic/reservation.ts","../../src/utils/logic/applicationDialogPermissions.ts","../../src/utils/ruleCheckPlugins/type.ts","../../src/utils/logic/currency.ts","../../src/utils/logic/taxes.ts"],"sourcesContent":["export * from 'utils/logic/permissions';\nexport * from 'utils/logic/date';\nexport * from 'utils/logic/reservation';\nexport * from 'utils/logic/applicationDialogPermissions';\nexport * from 'utils/ruleCheckPlugins/type';\nexport * from 'utils/logic/currency';\nexport * from 'utils/logic/taxes';\n","import { Permission, PermissionState } from '@prisma/client';\n\nexport const getHighestPermissionState = (states: Array<Permission>) => {\n\tlet result: PermissionState = PermissionState.NONE;\n\tfor (const permission of states) {\n\t\tif (permission.allowed === PermissionState.ALL) return PermissionState.ALL;\n\t\tif (permission.allowed === PermissionState.OWN) result = PermissionState.OWN;\n\t\tif (permission.allowed === PermissionState.NONE) continue;\n\t}\n\treturn result;\n};\n","import { DateTime, Interval, Settings } from 'luxon';\n\nSettings.defaultLocale = 'de';\nSettings.defaultZone = 'Europe/Berlin';\n\nexport const addDays = (date: Date, amount: number) => DateTime.fromJSDate(date).plus({ day: amount }).toJSDate();\nexport const subDays = (date: Date, amount: number) => DateTime.fromJSDate(date).minus({ day: amount }).toJSDate();\n\nexport const addHours = (date: Date, amount: number) => DateTime.fromJSDate(date).plus({ hour: amount }).toJSDate();\nexport const subHours = (date: Date, amount: number) => DateTime.fromJSDate(date).minus({ hour: amount }).toJSDate();\n\nexport const addMinutes = (date: Date, amount: number) => DateTime.fromJSDate(date).plus({ minute: amount }).toJSDate();\nexport const subMinutes = (date: Date, amount: number) => DateTime.fromJSDate(date).minus({ minute: amount }).toJSDate();\n\nexport const differenceInMinutes = (end: Date, start: Date) =>\n\tDateTime.fromJSDate(start).diff(DateTime.fromJSDate(end), ['minutes', 'seconds', 'milliseconds']).minutes;\n\nexport const format = (date: Date, format: string) => DateTime.fromJSDate(date).toFormat(format);\n\nexport const formatDate = (date: Date) => format(date, 'dd.MM.yyyy');\n\nexport const formatTime = (date: Date) => format(date, 'H:mm');\n\nexport const getHours = (date: Date) => format(date, 'Hmm');\n\nexport const isActivePeriod = (date: Date, data?: { activeFrom?: Date | null; activeTo?: Date | null } | null) => {\n\tif (!data || !data.activeFrom || !data.activeTo) return false;\n\n\tif (isBefore(date, data.activeFrom) || isAfter(date, data.activeTo)) return true;\n\n\treturn false;\n};\n\nexport const getIntervalFromJsDate = (firstDate: Date, secondDate: Date) => {\n\tconst fd = DateTime.fromJSDate(firstDate);\n\tconst sd = DateTime.fromJSDate(secondDate);\n\n\treturn Interval.fromDateTimes(fd, sd);\n};\n\nexport const isBefore = (firstDate: Date, secondDate: Date) => DateTime.fromJSDate(firstDate) < DateTime.fromJSDate(secondDate);\n\nexport const isAfter = (firstDate: Date, secondDate: Date) => DateTime.fromJSDate(firstDate) > DateTime.fromJSDate(secondDate);\n\nexport const compareAsc = (firstDate: Date, secondDate: Date) => {\n\tconst result = DateTime.fromJSDate(firstDate).toSeconds() - DateTime.fromJSDate(secondDate).toSeconds();\n\treturn result < 0 ? -1 : result > 0 ? 1 : 0;\n};\n\nexport const startOfDay = (date: Date) => DateTime.fromJSDate(date).startOf('day').toJSDate();\nexport const endOfDay = (date: Date) => DateTime.fromJSDate(date).endOf('day').toJSDate();\n\nconst zeroBasedWeekDayIntegers = [1, 2, 3, 4, 5, 6, 0];\nexport const getZeroBasedWeekdayInteger = (date: Date): number => zeroBasedWeekDayIntegers[DateTime.fromJSDate(date).get('weekday') - 1] ?? 1;\n","import { DateTime } from 'luxon';\nimport { addMinutes, differenceInMinutes, format, isAfter } from './date';\n\nexport const getAvailableTimeSlots = (startTime: Date, maxEndTime: Date, nextBookingStart?: Date) => {\n\tlet theTime = DateTime.fromJSDate(maxEndTime)\n\t\t.set({\n\t\t\tyear: startTime.getFullYear(),\n\t\t\tmonth: startTime.getMonth() + 1,\n\t\t\tday: startTime.getDate(),\n\t\t})\n\t\t.toJSDate();\n\tif (nextBookingStart && isAfter(theTime, nextBookingStart)) {\n\t\ttheTime = nextBookingStart;\n\t}\n\n\tconst timeslots: { label: string; value: string }[] = [];\n\tlet currentDifference = 0.5;\n\tfor (let addTime = addMinutes(startTime, 30); differenceInMinutes(addTime, theTime) >= 0; addTime = addMinutes(addTime, 30)) {\n\t\ttimeslots.push({\n\t\t\tlabel: `${format(addTime, 'HH:mm')} (${currentDifference.toString().replace('.', ',')} Stunden)`,\n\t\t\tvalue: currentDifference.toString(),\n\t\t});\n\t\tcurrentDifference = currentDifference + 0.5;\n\t}\n\treturn timeslots;\n};\n","export enum ApplicationDialogPermission {\n\tREPEATED_RESERVATIONS = 'repeatedReservations',\n\tMULTIPLE_COURT_RESERVATIONS = 'multipleCourtReservations',\n\tRESERVATION_SETTINGS = 'reservationSettings',\n\tDELETE_BOOKING = 'deleteBooking',\n}\n","import type { ReservationStatus, ReservationType } from 'db/databaseTypes';\n\nexport interface ReservationRawData {\n\ttitle: string;\n\tstart: Date;\n\tend: Date;\n\tcourtId: string | null;\n\tstatus: ReservationStatus;\n\ttype?: ReservationType;\n\townerId: string;\n\tlight: boolean;\n\tradiator: boolean;\n\tfellows: { connect: { id: string }[] } | undefined;\n\tprice: number;\n\ttaxRate: number;\n}\n\nexport enum AvailableRuleCheckPlugins {\n\tmaxTimeBefore = 'maxTimeBefore',\n\tminTimeBefore = 'minTimeBefore',\n\tminDuration = 'minDuration',\n\tmaxDuration = 'maxDuration',\n\tmaxBookingsAtSameTime = 'maxBookingsAtSameTime',\n}\n\nexport interface RuleCheckPlugins {\n\t[key: string]: (reservation: ReservationRawData, value: string) => Promise<boolean> | boolean;\n}\n","export const currencyFormatter = new Intl.NumberFormat(\"de-DE\", {\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n","export const getNetFromGross = (grossPrice: number, taxRate = 19) => {\n\tconst vat = taxRate / 100;\n\n\t//Net = Gross / (1 + Vat)\n\treturn +(grossPrice / (1 + vat)).toFixed(2);\n};\n\nexport const getTaxValueFromGross = (gross: number, taxRate = 19) => {\n\tconst vat = taxRate / 100;\n\n\t//Tax = Gross * Vat / (1 + Vat)\n\treturn +((gross * vat) / (1 + vat)).toFixed(2);\n};\n"],"mappings":"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","names":["format","import_luxon","ApplicationDialogPermission","AvailableRuleCheckPlugins"]}